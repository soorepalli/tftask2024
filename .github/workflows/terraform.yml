name: Terraform for Multi-User GCS Buckets

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        user: 
          - user1
          - user2
          - user3
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Set up Google Cloud SDK
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_TF_KEY }}
        export_default_credentials: true

    # Step 3: Set Google Application Default Credentials
    - name: Export Google Credentials
      run: echo "${{ secrets.GCP_TF_KEY }}" > /tmp/google-credentials.json
    - name: Set Environment Variable
      run: echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/google-credentials.json" >> $GITHUB_ENV

    - name: Check if user-specific files changed
      id: check_changes
      run: |
        echo "Checking if ${USER} configuration files have changed..."
        git diff --exit-code --quiet "users/${{ matrix.user }}.tfvars" || echo "Configuration for ${matrix.user} changed."
        git diff --exit-code --quiet "users/${{ matrix.user }}_backend.tf" || echo "Backend configuration for ${matrix.user} changed."
        echo "changed=${?}" >> $GITHUB_ENV

    - name: Set Backend Configuration for ${{ matrix.user }}
      if: env.changed == '0'
      run: |
        # Dynamically generate backend.tf for the user
        cp "users/${{ matrix.user }}_backend.tf" backend.tf

    - name: Initialize Terraform for ${{ matrix.user }}
      if: env.changed == '0'
      run: |
        user_workspace="${{ matrix.user }}"
        terraform workspace new "$user_workspace" || terraform workspace select "$user_workspace"
        # terraform init -backend-config=backend.tf
        terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_TF_KEY}}

    - name: Terraform Plan for ${{ matrix.user }}
      if: env.changed == '0'
      run: |
        terraform plan -var-file="users/${{ matrix.user }}.tfvars" -out=plan.tfplan
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_TF_KEY}}

    - name: Terraform Apply for ${{ matrix.user }}
      if: env.changed == '0'
      run: |
        terraform apply -auto-approve plan.tfplan
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_TF_KEY}}
